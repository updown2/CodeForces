#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define For(i, a, b) for(int i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 0, M)
#define s <<" "<<
#define w cout
#define e "\n"
#define mp make_pair
#define a first
#define b second
#define pb push_back
#define int ll
const int MAXN=100000, INF=10000000000;
///500,000,000
int N, M, out, W[MAXN], edge[MAXN][2];
set<pair<int, int> > dp[MAXN]; /// (weight, length)
set<pair<int, int> >::iterator it;

void add(int at) {
    int a = edge[at][0], b = edge[at][1], c = W[at];
    it = dp[b].lower_bound(mp(c+1, 0));
    int val = (*it).b+1;
    //w<< a+1 s ":" s c s val<<e;
    dp[a].insert(mp(c, val));
    it = dp[a].find(mp(c, val));
    it++;
    if (it != dp[a].end() && val <= (*it).b) {
        dp[a].erase(mp(c, val));
        return;
    }
    it = dp[a].find(mp(c, val));
    while (it != dp[a].begin()) {
        it--;
        if ((*it).b <= val) {
            dp[a].erase(it);
            it = dp[a].find(mp(c, val));
        }
        else break;
    }
    //w<< a+1 s ":";for (it = dp[a].begin(); it != dp[a].end(); it++) w<< (*it).a s (*it).b << " "; w<<e;
}

main() {
	//ifstream cin("test.in");
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> N >> M;
	ffj {
        int a, b, c;
        cin >> a >> b >> c;
        a--; b--;
        W[j] = c;
        edge[j][0] = a, edge[j][1] = b;
	}
	ffi dp[i].insert(mp(INF, 0));
	for (int j=M-1; j>=0; j--) add(j);
	For (i, 0, N) {
        it = dp[i].begin();
        out = max(out, (*it).b);
	}
	w<< out<<e;
}