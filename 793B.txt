#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define For(i, a, b) for(int i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 0, M)
#define ffa ffi ffj
#define s <<" "<<
#define w cout
#define e endl
#define pb push_back
#define mp make_pair
#define a first
#define b second
//500,000,000 operations
//Global Variables
int N, M;
char grid[1000][1000];
bool vis[1000][1000][4];
int sx, sy, ex, ey;
deque<pair<pair<int, int>, pair<int, int> > > next1; // ((-cost, dir), (x, y) )
//0: up, 1: down, 2: left, 3: right

int main() {
	//ifstream cin ("test_codeforces.in");
	cin >> N >> M;
	ffa cin >> grid[i][j];
	ffa {
		if (grid[i][j] == 'S') {sx = i; sy = j;}
		if (grid[i][j] == 'T') {ex = i; ey = j;}
		For (k, 0, 4) vis[i][j][k] = false;
		if (grid[i][j] == '*') For (k, 0, 4) vis[i][j][k] = true;
	}
	For (i, 0, 4) next1.push_front(mp(mp(0, i), mp(sx, sy)));
	while (!next1.empty()) {
		int cost = next1.front().a.a;
		int dir = next1.front().a.b;
		int x = next1.front().b.a;
		int y = next1.front().b.b;
		next1.pop_front();
		//if (x >= 0 && y >= 0 && x<N && y<M && !vis[x][y][dir]) {
		if (x == ex && y == ey) {w<< "YES"<<e; return 0;}
		vis[x][y][dir] = true;
		if (dir == 0) {
			if (x>0 && !vis[x-1][y][0]) next1.push_front(mp(mp(cost, dir), mp(x-1, y)));
			if (cost != -2) {
				if (x<N-1 && !vis[x+1][y][1]) next1.push_back(mp(mp(cost-1, 1), mp(x+1, y)));
				if (y>0 && !vis[x][y-1][2]) next1.push_back(mp(mp(cost-1, 2), mp(x, y-1)));
				if (y<M-1 && !vis[x][y+1][3]) next1.push_back(mp(mp(cost-1, 3), mp(x, y+1)));
			}
		}
		if (dir == 1) {
			if (x<N-1 && !vis[x+1][y][1]) next1.push_front(mp(mp(cost, dir), mp(x+1, y)));
			if (cost != -2) {
				if (x>0 && !vis[x-1][y][0]) next1.push_back(mp(mp(cost-1, 0), mp(x-1, y)));
				if (y>0 && !vis[x][y-1][2]) next1.push_back(mp(mp(cost-1, 2), mp(x, y-1)));
				if (y<M-1 && !vis[x][y+1][3]) next1.push_back(mp(mp(cost-1, 3), mp(x, y+1)));
			}
		}
		if (dir == 2) {
			if (y>0 && !vis[x][y-1][2]) next1.push_front(mp(mp(cost, dir), mp(x, y-1)));
			if (cost != -2) {
				if (x<N-1 && !vis[x+1][y][1]) next1.push_back(mp(mp(cost-1, 1), mp(x+1, y)));
				if (x>0 && !vis[x-1][y][0]) next1.push_back(mp(mp(cost-1, 0), mp(x-1, y)));
				if (y<M-1 && !vis[x][y+1][3]) next1.push_back(mp(mp(cost-1, 3), mp(x, y+1)));
			}
		}
		if (dir == 3) {
			if (y<M-1 && !vis[x][y+1][3]) next1.push_front(mp(mp(cost, dir), mp(x, y+1)));
			if (cost != -2) {
				if (x<N-1 && !vis[x+1][y][1]) next1.push_back(mp(mp(cost-1, 1), mp(x+1, y)));
				if (y>0 && !vis[x][y-1][2]) next1.push_back(mp(mp(cost-1, 2), mp(x, y-1)));
				if (x>0 && !vis[x-1][y][0]) next1.push_back(mp(mp(cost-1, 0), mp(x-1, y)));
			}
		}
		//}
	}
	w<< "NO"<<e;
	
	return 0;
}

