#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define For(i, a, b) for(ll i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 1, M+1)
#define ffa ffi ffj
#define s <<" "<<
#define w cout
#define e "\n"
#define pb push_back
#define mp make_pair
#define a first
#define b second
//#define ll ll
//500,000,000 operations
const int MAXN = 100002;
//Global Variables
int N, M, pre[MAXN], tree[4*MAXN], gof[MAXN], gob[MAXN];

void update (int ind, int L, int R, int x, int v) {
	if (L > x || R < x) return;
	if (L == R) {
		tree[ind] = v;
		return;
	}
	update(ind*2, L, (L+R)/2, x, v), update(ind*2+1, (L+R)/2+1, R, x, v);
	tree[ind] = max(tree[ind*2], tree[ind*2+1]);
}
int query (int ind, int L, int R, int oL, int oR) {
	if (oR < L || R < oL) return 0;
	if (oL <= L && R <= oR) return tree[ind];
	return max(query(ind*2, L, (L+R)/2, oL, oR), query(ind*2+1, (L+R)/2+1, R, oL, oR));
}

int main() {
	//ifstream cin ("test.in");
	ios_base::sync_with_stdio; cin.tie(0);
	cin >> N >> M;
	ffi {
		int a, b; cin >> a >> b;
		pre[a]++, pre[b+1]--;
	}
	ffj pre[j] += pre[j-1];
	//ffj w<< pre[j]<<" "; w<<e;
	ffj {
		//w<< j s ":" s pre[j] s "," s query(1, 1, M, 0, pre[j])<<e;
		gof[j] = 1+query(1, 0, M, 0, pre[j]);
		update(1, 0, M, pre[j], gof[j]);
		gof[j] = max(gof[j], gof[j-1]);
		//w<< "updating" s pre[j]<<e;
	}
	//ffj w<< gof[j]<< " ";w<<e;
	For (i, 0, 4*MAXN) tree[i] = 0;
	for (int j=M; j>=1; j--) {
		//w<< j s ":" s pre[j] s "," s query(1, 1, M, 0, pre[j])<<e;
		gob[j] = 1+query(1, 0, M, 0, pre[j]);
		update(1, 0, M, pre[j], gob[j]);
		gob[j] = max(gob[j], gob[j+1]);
		//w<< "updating" s pre[j]<<e;
	}
	//ffj w<< gob[j]<< " ";w<<e;
	int out = 0;
	For (i, 0, M+1) {
		out = max(out, gof[i] + gob[i+1]);
	}
	w<< out<<e;
}